[{"C:\\Users\\baban\\Documents\\project\\frontend\\src\\index.js":"1","C:\\Users\\baban\\Documents\\project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\baban\\Documents\\project\\frontend\\src\\App.js":"3","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Components\\SidebarData.js":"4","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\About.js":"5","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Home.js":"6","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Buying.js":"7","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Components\\Header.js":"8","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\POS.js":"9","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Item.js":"10","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Components\\ItemForm.js":"11"},{"size":543,"mtime":1616036581563,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":873,"mtime":1616335614687,"results":"15","hashOfConfig":"13"},{"size":777,"mtime":1616055260607,"results":"16","hashOfConfig":"13"},{"size":172,"mtime":1608131566916,"results":"17","hashOfConfig":"13"},{"size":201,"mtime":1608174481299,"results":"18","hashOfConfig":"13"},{"size":14732,"mtime":1616504816650,"results":"19","hashOfConfig":"13"},{"size":4009,"mtime":1616036947474,"results":"20","hashOfConfig":"13"},{"size":11452,"mtime":1616234097145,"results":"21","hashOfConfig":"13"},{"size":11361,"mtime":1616549955685,"results":"22","hashOfConfig":"13"},{"size":1107,"mtime":1616340455907,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"jwp6b1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"C:\\Users\\baban\\Documents\\project\\frontend\\src\\index.js",[],["52","53"],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\App.js",["54"],"import './App.css';\nimport Header from './Components/Header'\nimport Item from './Pages/Item'\nimport About from './Pages/About'\nimport Home from './Pages/Home'\nimport Buying from './Pages/Buying'\nimport POS from './Pages/POS'\nimport React from 'react'\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n  }\n\n  render(){\n    return(\n        <div className='App'>\n      <Router>\n      <Header/>\n        <Switch>\n          <Route path='/'  exact component={Home}/>\n          <Route path='/buying' exact component={Buying}/>\n          <Route path='/item' exact component={Item}/>\n          <Route path='/pos' exact component={POS}/>\n          <Route path='/about' exact component={About}/>\n        </Switch>\n      </Router>\n        \n        </div>\n    )\n  }\n}\n\nexport default App;\n","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Components\\SidebarData.js",[],["55","56"],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\About.js",[],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Home.js",[],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Buying.js",[],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\Components\\Header.js",["57","58"],"import React, {useState} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {SidebarData} from './SidebarData';\r\nimport List from '@material-ui/core/List';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  nested:{\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n\r\n  activeDrawer:{\r\n    textDecoration:'none',\r\n    color:'black',\r\n  },\r\n  list:{\r\n    width: 240,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = () =>{\r\n  const classes = useStyles();\r\n\r\n  const [drawerOpen, setDrawerOpen] = useState(false)\r\n\r\n  const toggleDrawer = () =>{\r\n    setDrawerOpen(!drawerOpen)\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar style={{ color:'black', background:'#ffd100'}} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={toggleDrawer}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Web App\r\n          </Typography>\r\n        </Toolbar>\r\n                \r\n        </AppBar>\r\n\r\n        <Drawer onClose={toggleDrawer} open={drawerOpen}>\r\n                <List subheader={\r\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">Sidebar</ListSubheader>} \r\n                  className={classes.list}>\r\n                    {SidebarData.map((prop, key) => {\r\n                      return(\r\n                        <NavLink className={classes.activeDrawer} to={prop.path} key={key}>\r\n\r\n                        <ListItem onClick={toggleDrawer} button key={prop.text}>\r\n                            {prop.icon && <ListItemIcon>{prop.icon}</ListItemIcon>}\r\n                            <ListItemText primary={prop.text}/>\r\n                        </ListItem>\r\n                        </NavLink>\r\n                        );\r\n                      })}\r\n                </List>\r\n            </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header)","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\POS.js",[],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Item.js",["59","60"],"import React, { useEffect, useState } from 'react'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        flexGrow:1,\r\n    },\r\n    form:{\r\n        marginTop: 15,\r\n        marginRight:10,\r\n        backgroundColor:'#D6D6D6',\r\n        padding:10,\r\n        minHeight:700,\r\n    },\r\n\r\n    paper:{\r\n        margin:14,\r\n        backgroundColor:'#D6D6D6',\r\n        minHeight:700,\r\n        textAlign: 'left',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    table:{\r\n        maxHeight:700,\r\n    }\r\n\r\n}));\r\n\r\n\r\n\r\nexport default function Item() {\r\n    var timer\r\n    const classes = useStyles();\r\n    const [message, setMessage] = useState(false)\r\n    const [itemList, setItemList] = useState([])\r\n    const [itemObj, setItem] = useState({name:'', barcode_number:'', cost:'', srp:''})\r\n    const [itemFormStatus, setItemForm] = useState('Create')\r\n    const [columnToQuery, setColumnToQuery] = useState('')\r\n    const [search, setSearch] = useState('')\r\n\r\n    function getCookie(name) {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        // fetchItems\r\n        var url = 'http://127.0.0.1:8000/api/item-list/'\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(response => setItemList(response))\r\n        },[itemObj])\r\n\r\n    const handleOpen = () =>{\r\n        console.log('open')\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setMessage(false);\r\n      };\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        var csrftoken = getCookie('csrftoken')\r\n        var url = 'http://127.0.0.1:8000/api/item-create/'\r\n\r\n        fetch(url, {\r\n            method:'POST',\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'X-CSRFToken':csrftoken,\r\n            },\r\n            'body': JSON.stringify(itemObj)\r\n        }).then((response) => {\r\n            setItem({...itemObj, id:null, name:'', barcode_number:'', srp:'', cost:''})\r\n        })\r\n    }\r\n\r\n    const itemCreate = (e) =>{\r\n        setItem({...itemObj, [e.target.id]:e.target.value})\r\n    }\r\n\r\n    const handleEdit = (e) =>{\r\n        e.preventDefault()\r\n        var csrftoken = getCookie('csrftoken')\r\n        var url = `http://127.0.0.1:8000/api/item-update/${itemObj.id}/`\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'X-CSRFToken':csrftoken,\r\n            },\r\n            'body': JSON.stringify(itemObj)\r\n        })\r\n        .then((response) => {\r\n            setMessage(true)\r\n            setItemForm('Create')\r\n            setItem({...itemObj, id:null, name:'', barcode_number:'', cost:'', srp:''})\r\n        })\r\n    }\r\n\r\n    const handleClearForm = (e) =>{\r\n        setItemForm('Create')\r\n        setItem({...itemObj, id:null, name:'', barcode_number:'', cost:'', srp:''})\r\n    }\r\n\r\n    \r\n    const viewItemHandler = (e, item) => {\r\n        clearTimeout(timer)\r\n        if(e.detail === 1){\r\n            timer = setTimeout(() => {\r\n            setItem({...itemObj, id:item.id, name:item.name, barcode_number:item.barcode_number, cost:item.cost, srp:item.srp})\r\n            setItemForm('View')\r\n            }, 200)\r\n        }\r\n        else{\r\n            setItem({...itemObj, id:item.id, name:item.name, barcode_number:item.barcode_number, cost:item.cost, srp:item.srp})\r\n            setItemForm('Edit')\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const handleSelect = (e) =>{\r\n        setColumnToQuery(e.target.value)\r\n    }\r\n\r\n    \r\n        return(\r\n            <div className={classes.root}>\r\n            \r\n            <Grid container spacing={1}>\r\n                <Grid item xs={7}> \r\n                <Paper className={classes.paper}>\r\n                <Grid container style={{padding:5}} spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField onChange={(e) => setSearch(e.target.value)} value={search} label='SEARCH' size='small' fullWidth variant='outlined'></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Select onChange={(e) => handleSelect(e)} fullWidth variant='standard'>\r\n                            <MenuItem value='name'>Item Name</MenuItem>\r\n                            <MenuItem value='barcode'>Item Barcode</MenuItem>\r\n                            <MenuItem value='rate'>Item Buying</MenuItem>\r\n                            <MenuItem value='cost'>Item Selling</MenuItem>\r\n                        </Select>\r\n                    </Grid>\r\n                </Grid>\r\n                <TableContainer className={classes.table}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Item Name</TableCell>\r\n                                <TableCell>Barcode</TableCell>\r\n                                <TableCell>Buying</TableCell>\r\n                                <TableCell>Selling</TableCell>\r\n                                <TableCell width='10'>Modified</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {itemList.map((item,key) =>(\r\n                        <TableRow onClick={(e) => viewItemHandler(e, item)} key={item.id} hover>\r\n                           <TableCell>{item.name}</TableCell>\r\n                           <TableCell>{item.barcode_number}</TableCell>\r\n                           <TableCell>{item.cost}</TableCell>\r\n                           <TableCell>{item.srp}</TableCell>\r\n                           <TableCell>{item.modified}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n                </Paper>\r\n                </Grid>\r\n                \r\n                <Grid item xs={5}>\r\n                    <Paper className={classes.form}>\r\n                        <Grid container item spacing={2}>\r\n                        <Grid item xs={12}>\r\n                        <Typography variant=\"h1\" style={{fontSize:30,textAlign:'left',borderRadius:5, color:'#333533',backgroundColor:'#ffd100'}} noWrap>Item {itemFormStatus}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                        <TextField id='name' onChange={(e) => {itemCreate(e)}} fullWidth variant='outlined' value={itemObj.name} label='Name'></TextField>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                        <TextField id='barcode_number' onChange={(e) => {itemCreate(e)}} fullWidth variant='outlined' value={itemObj.barcode_number} label='Barcode'></TextField>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                        <Checkbox label='Enable'/>\r\n                        </Grid>\r\n                        <Grid container item spacing={1}>\r\n                        <Grid item xs={4}>\r\n                        <TextField fullWidth id='cost' onChange={(e) => {itemCreate(e)}} type='number' value={itemObj.cost} variant='outlined' label='Buying'></TextField>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                        <TextField fullWidth id='srp' onChange={(e) => {itemCreate(e)}} type='number' value={itemObj.srp} variant='outlined' label='Selling'></TextField>\r\n                        </Grid>\r\n                        <Grid container item spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            {itemFormStatus === 'Create' && (itemObj.name !== '' && itemObj.barcode_number !== '' && itemObj.cost !== '' && itemObj.srp !== '') ? (\r\n                            <Button fullWidth size='large' variant='contained' color='primary' onClick={(e) => handleSubmit(e)}>Submit</Button>\r\n                            ):itemFormStatus === 'Edit' && (itemObj.name === '' || itemObj.barcode_number === '' || itemObj.cost === '' || itemObj.srp === '') ? (\r\n                            <Button disabled fullWidth size='large' variant='contained' color='primary' onClick={(e) => handleSubmit(e)}>Save</Button>\r\n                            ):itemFormStatus === 'Edit' && (itemObj.name !== '' || itemObj.barcode_number !== '' || itemObj.cost !== '' || itemObj.srp !== '') ? (\r\n                            <Button fullWidth size='large' variant='contained' color='primary' onClick={(e) => handleEdit(e, itemObj)}>Save</Button>\r\n                            ):<Button disabled fullWidth size='large' variant='contained' color='primary' onClick={(e) => handleSubmit(e)}>Submit</Button>\r\n\r\n                            }\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            {itemObj.name !== '' || itemObj.barcode_number !== '' || itemObj.cost !== '' || itemObj.srp !== ''? (\r\n                            <Button fullWidth size='large' variant='contained' color='secondary' onClick={(e) => handleClearForm(e)}>Clear</Button>\r\n                            ):<Button disabled fullWidth size='large' variant='contained' color='secondary' onClick={(e) => handleClearForm(e)}>Clear</Button>\r\n                        }\r\n                        </Grid>\r\n                        </Grid>\r\n                        </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n                \r\n            </Grid>   \r\n            <Snackbar anchorOrigin={{vertical: 'bottom', horizontal:'right'}} autoHideDuration={6000} open={message} onClose={handleClose}>\r\n            <Alert variant='filled' elevation={6} onClose={handleClose} severity=\"success\">\r\n                Saved\r\n            </Alert>\r\n            </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Components\\ItemForm.js",[],["61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":12,"column":3,"nodeType":"69","messageId":"70","endLine":14,"endColumn":4},{"ruleId":"63","replacedBy":"71"},{"ruleId":"65","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":17},{"ruleId":"73","severity":1,"message":"77","line":9,"column":8,"nodeType":"75","messageId":"76","endLine":9,"endColumn":18},{"ruleId":"73","severity":1,"message":"78","line":56,"column":12,"nodeType":"75","messageId":"76","endLine":56,"endColumn":25},{"ruleId":"73","severity":1,"message":"79","line":84,"column":11,"nodeType":"75","messageId":"76","endLine":84,"endColumn":21},{"ruleId":"63","replacedBy":"80"},{"ruleId":"65","replacedBy":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["82"],["83"],"no-unused-vars","'InputBase' is defined but never used.","Identifier","unusedVar","'SearchIcon' is defined but never used.","'columnToQuery' is assigned a value but never used.","'handleOpen' is assigned a value but never used.",["82"],["83"],"no-global-assign","no-unsafe-negation"]