[{"C:\\Users\\baban\\Documents\\project\\frontend\\src\\index.js":"1","C:\\Users\\baban\\Documents\\project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\baban\\Documents\\project\\frontend\\src\\App.js":"3","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Components\\SidebarData.js":"4","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\About.js":"5","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Home.js":"6","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Buying.js":"7","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Components\\Header.js":"8","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\POS.js":"9","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Item.js":"10","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Receive.js":"11","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\BuyingList.js":"12"},{"size":543,"mtime":1616857251008,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1122,"mtime":1617972625486,"results":"16","hashOfConfig":"14"},{"size":965,"mtime":1617898073788,"results":"17","hashOfConfig":"14"},{"size":172,"mtime":1608131566916,"results":"18","hashOfConfig":"14"},{"size":201,"mtime":1608174481299,"results":"19","hashOfConfig":"14"},{"size":18695,"mtime":1618044179195,"results":"20","hashOfConfig":"14"},{"size":3953,"mtime":1617761406499,"results":"21","hashOfConfig":"14"},{"size":11452,"mtime":1616234097145,"results":"22","hashOfConfig":"14"},{"size":16371,"mtime":1618041567342,"results":"23","hashOfConfig":"14"},{"size":11808,"mtime":1617977748842,"results":"24","hashOfConfig":"14"},{"size":4707,"mtime":1617958875243,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"jwp6b1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"C:\\Users\\baban\\Documents\\project\\frontend\\src\\index.js",[],["54","55"],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\App.js",["56"],"import './App.css';\r\nimport Header from './Components/Header'\r\nimport Item from './Pages/Item'\r\nimport About from './Pages/About'\r\nimport Home from './Pages/Home'\r\nimport Buying from './Pages/Buying'\r\nimport Receive from './Pages/Receive'\r\nimport POS from './Pages/POS'\r\nimport BuyingList from './Pages/BuyingList'\r\nimport React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <div className='App'>\r\n      <Router>\r\n      <Header/>\r\n        <Switch>\r\n          <Route path='/'  exact component={Home}/>\r\n          <Route path='/buying' exact component={Buying}/>\r\n          <Route path='/buyingList' exact component={BuyingList}/>\r\n          <Route path='/item' exact component={Item}/>\r\n          <Route path='/receive' exact component={Receive}/>\r\n          <Route path='/pos' exact component={POS}/>\r\n          <Route path='/about' exact component={About}/>\r\n        </Switch>\r\n      </Router>\r\n        \r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Components\\SidebarData.js",[],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\About.js",[],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Home.js",[],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Buying.js",["57","58","59","60","61"],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\Components\\Header.js",[],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\POS.js",[],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Item.js",["62"],"C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\Receive.js",["63"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { TableContainer, TextField,  } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst drawerWidth = 500;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\"\r\n      },\r\n      appBar: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen\r\n        })\r\n      },\r\n      appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen\r\n        }),\r\n        marginRight: drawerWidth\r\n      },\r\n      title: {\r\n        flexGrow: 1\r\n      },\r\n      hide: {\r\n        display: \"none\"\r\n      },\r\n      drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n      },\r\n      drawerPaper: {\r\n        width: drawerWidth\r\n      },\r\n      drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: \"flex-start\"\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create(\"margin\", {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        marginRight: -drawerWidth\r\n      },\r\n      contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen\r\n        }),\r\n        marginRight: 0\r\n      },\r\n\r\n    drawerPaperForm:{\r\n\r\n        minHeight:500,\r\n    },\r\n\r\n    formPaper:{\r\n        backgroundColor:'#D6D6D6',\r\n        minHeight:125,\r\n        marginTop:25,\r\n        margin:5,\r\n    },\r\n\r\n    formTable:{\r\n        backgroundColor:'#D6D6D6',\r\n        minHeight:700,\r\n        marginTop:20,\r\n        margin:5,\r\n\r\n    }\r\n}))\r\n\r\nexport default function Receive() {\r\n    const classes = useStyles();\r\n    const [purchaseOrderList, setPurchaseOrderList] = useState([])\r\n    const [purchaseReceiptForm, setPurchaseReceiptForm] = useState({posting_datetime:new Date().toISOString(),items:[], supplier:'', status:'', invoice_amount:'', purchase_order_number:''})\r\n        useEffect(() => {\r\n        formatDate(purchaseReceiptForm.posting_datetime)\r\n        var url = 'http://127.0.0.1:8000/api/purchaseorder-list-submitted/'\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(response => setPurchaseOrderList(response))\r\n\r\n        \r\n\r\n    },[])\r\n\r\n    function getCookie(name) {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n\r\n\r\n    const formatDate = (date) =>{\r\n        var formatDate = new Date(date)\r\n        var year = formatDate.getFullYear();\r\n        var month = (1 + formatDate.getMonth()).toString();\r\n        month = month.length > 1 ? month : '0' + month;\r\n        var day = formatDate.getDate().toString();\r\n        day = day.length > 1 ? day : '0' + day;\r\n        var hour = (formatDate.getHours()).toString();\r\n        hour = hour.length > 1? hour :  '0' + hour;\r\n        var minute = formatDate.getMinutes().toString()\r\n        minute = minute.length > 1 ?  minute: '0' + minute;\r\n        var second = formatDate.getSeconds().toString();\r\n        second = second.length > 1 ?  second: '0' + second;\r\n        setPurchaseReceiptForm({...purchaseReceiptForm, posting_datetime:year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second})\r\n        }\r\n\r\n    const handleDateChange = (e) =>{\r\n        setPurchaseReceiptForm({...purchaseReceiptForm, posting_datetime:e.target.value})\r\n    }\r\n\r\n\r\n    const getPurchaseOrderItems = (e, value) => {\r\n\r\n        try{\r\n            setPurchaseReceiptForm({...purchaseReceiptForm,  purchase_order_number:value.purchase_order_number , supplier:value.supplier, status:'Draft', items:value.items})\r\n            \r\n        }\r\n        catch{\r\n            setPurchaseReceiptForm({...purchaseReceiptForm ,purchase_order_number:'' ,supplier:'', status:'', items:[], invoice_amount:0})\r\n        }\r\n\r\n\r\n       \r\n    }\r\n\r\n\r\n    \r\n    const qtyHandle = (e, item) => {\r\n        setPurchaseReceiptForm({\r\n        ...purchaseReceiptForm,\r\n            items:purchaseReceiptForm.items.map(\r\n            el => el.id === item.id ? {...el, qty:parseInt(e.target.value)}:el\r\n        ),\r\n        })\r\n    }\r\n\r\n    const costHandle = (e, item) => {\r\n        setPurchaseReceiptForm({\r\n            ...purchaseReceiptForm,\r\n            items:purchaseReceiptForm.items.map(\r\n                el => el.id === item.id ? {...el, cost:e.target.value}: el\r\n            )\r\n        })\r\n    }\r\n\r\n    const invoice_amountHandle = (e) => {\r\n        setPurchaseReceiptForm({...purchaseReceiptForm, invoice_amount:e.target.value})\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        var csrftoken = getCookie('csrftoken')\r\n        var url = 'http://127.0.0.1:8000/api/purchasereceipt-create/'\r\n        console.log(purchaseReceiptForm)\r\n        fetch(url,{\r\n            method:'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            'body' :JSON.stringify(purchaseReceiptForm)\r\n        })\r\n\r\n    }\r\n\r\n    const itemList = {...purchaseReceiptForm}\r\n    const grandTotal = itemList.items.reduce((total, current) => total + (current.qty * current.cost),0)\r\n    const qtyTotal = itemList.items.reduce((total, current) => total + (current.qty),0)\r\n\r\n    \r\n    \r\n\r\n    return(\r\n        <div>\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n            <Paper className={classes.formPaper}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={5}>\r\n                        <TextField size='small' label='Date' onChange={(e) => handleDateChange(e)} value={purchaseReceiptForm.posting_datetime} style={{marginLeft:10}} fullWidth variant='outlined' type='datetime-local'></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                    <Autocomplete size='small' onChange ={getPurchaseOrderItems} options={purchaseOrderList} getOptionLabel={(option) => option.purchase_order_number} autoHighlight style={{ width: 300 }} \r\n                        renderInput={(params) => <TextField {...params} label=\"Purchase Order\" variant=\"outlined\" />}/>\r\n                    </Grid>\r\n       \r\n                </Grid>\r\n\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={5}>\r\n                        <TextField style={{marginLeft:10}} read_only='true' fullWidth size='small' variant='outlined' label='Supplier' value={purchaseReceiptForm.supplier}></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <TextField size='small' fullWidth variant='outlined' label='Status' value={purchaseReceiptForm.status}></TextField>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n            <Paper className={classes.formPaper}>\r\n                <Grid style={{marginLeft:5}} container spacing={3}>\r\n                    <Grid item xs={3}>\r\n                        <TextField size='small' helperText='Auto Compute' fullWidth variant='outlined' read_only='true' value={grandTotal.toFixed(2)} label='Grand Total:'></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <TextField size='small' fullWidth variant='outlined' label='Total Qty' value={qtyTotal}></TextField>\r\n                    </Grid>\r\n       \r\n                </Grid>\r\n\r\n                <Grid style={{marginLeft:5}} container spacing={3}>\r\n                    <Grid item xs={3}>\r\n                        <TextField size='small' onChange={(e) => {invoice_amountHandle(e)}} fullWidth variant='outlined' type='number' label='Invoice Amount' value={purchaseReceiptForm.invoice_amount}></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        {purchaseReceiptForm.items.length > 0 ? (\r\n                        <Button variant='contained' onClick={(e) => {handleSubmit(e)}} color='primary'>Submit</Button>\r\n                        ):purchaseReceiptForm.status === 'Submitted' ? (\r\n                        <Button disabled variant='contained' color='secondary'>Cancel</Button>\r\n                        ):(\r\n                        <Button disabled variant='contained' color='secondary'>Submit</Button>\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            </Grid>        \r\n        </Grid>\r\n\r\n\r\n\r\n            <Paper className={classes.formTable}>   \r\n                <Grid container spacing={3}>\r\n                    <TableContainer>\r\n                        <Table size='small'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell width='50%'>Description</TableCell>\r\n                                    <TableCell width='10%'>Qty</TableCell>\r\n                                    <TableCell width='10%'>Rate</TableCell>\r\n                                    <TableCell align='center' width='30%'>Total</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {purchaseReceiptForm.items.map((item,key)=>(\r\n                                    <TableRow hover key={key}>\r\n                                        <TableCell>{item.name}</TableCell>\r\n                                        <TableCell><TextField  type='number' value={item.qty} variant='outlined' onChange={(e) => {qtyHandle(e, item, key)}} size='small'></TextField></TableCell>\r\n                                        <TableCell><TextField  type='number' value={item.cost} variant='outlined' onChange={(e) => {costHandle(e, item, key)}} size='small'></TextField></TableCell>\r\n                                        <TableCell align='center'><TextField read_only='true' variant='outlined' size='small' value={(item.qty * item.cost).toFixed(2)}></TextField></TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Paper>\r\n\r\n\r\n   \r\n        </div>\r\n    )\r\n}","C:\\Users\\baban\\Documents\\project\\frontend\\src\\Pages\\BuyingList.js",["64","65","66","67"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles, { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n\r\n    },\r\n    paper:{\r\n        margin:10,\r\n        marginLeft:55,\r\n        marginRight:25,     \r\n    },\r\n    search:{\r\n        margin:10,\r\n        marginLeft:55,\r\n        marginRight:25,\r\n        backgroundColor:'#d6d6d6'\r\n    },\r\n    table:{\r\n        margin:10,\r\n        marginLeft:55,\r\n        marginRight:25,\r\n        backgroundColor:'#d6d6d6',\r\n        minHeight:700,\r\n    }\r\n}))\r\n\r\nexport default function BuyingList() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [search, setSearch] = useState('')\r\n    const [purchaseOrderList, setPurchaseOrderList] = useState([])\r\n    useEffect(() => {\r\n        fetchPurchaseOrders()\r\n    },[])\r\n\r\n    const fetchPurchaseOrders = () =>{\r\n        var url = 'http://127.0.0.1:8000/api/purchaseorder-list'\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(response => setPurchaseOrderList(response))\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const handleCreateNew = (e) =>{\r\n        console.log(e)\r\n        history.push('/buying')\r\n    }\r\n\r\n    const getTotalAmount = (purchaseOrder) =>{\r\n        var total = 0\r\n        {purchaseOrder.items.map((item, key) => (\r\n            total += parseFloat(item.cost * item.qty)\r\n        ))}\r\n        return total.toFixed(2)\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Grid container direction=\"row-reverse\">\r\n        <Paper className={classes.paper}>\r\n                <Button to style={{float:'right'}} onClick={(e) => handleCreateNew(e)} variant='contained' color='primary'>Create Purchase Order</Button>\r\n        </Paper>\r\n        </Grid>\r\n    \r\n        <Paper className={classes.search}>\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={4}>\r\n                <TextField type='search' onChange={(e) => handleSearch(e)} fullWidth label='Search' style={{margin:5}} variant='outlined' size='small' InputProps={{startAdornment:(\r\n                    <InputAdornment position='start'>\r\n                        <SearchIcon />\r\n                    </InputAdornment>)}}/>\r\n            </Grid>\r\n        </Grid>\r\n        </Paper>\r\n\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n            <Paper className={classes.table}>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Purchase Order</TableCell>\r\n                                <TableCell>Status</TableCell>\r\n                                <TableCell>Delivered</TableCell>\r\n                                <TableCell>Total Amount</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        \r\n                        <TableBody>\r\n                            {purchaseOrderList.filter((val) => {\r\n                                if(search === ''){\r\n                                    return val\r\n                                }else if(val['purchase_order_number'].toLowerCase().includes(search.toLowerCase())){\r\n                                    return val}\r\n                            }).map((item, key) => (\r\n                                <TableRow key={key} hover>\r\n                                    <TableCell>{item.purchase_order_number}</TableCell>\r\n                                    <TableCell>{item.status}</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell>{getTotalAmount(item)}</TableCell>\r\n\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n            </Grid>\r\n        </Grid>\r\n        </>\r\n    )\r\n}",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":14,"column":3,"nodeType":"74","messageId":"75","endLine":16,"endColumn":4},{"ruleId":"76","severity":1,"message":"77","line":11,"column":8,"nodeType":"78","messageId":"79","endLine":11,"endColumn":9},{"ruleId":"76","severity":1,"message":"80","line":16,"column":10,"nodeType":"78","messageId":"79","endLine":16,"endColumn":20},{"ruleId":"76","severity":1,"message":"81","line":21,"column":8,"nodeType":"78","messageId":"79","endLine":21,"endColumn":24},{"ruleId":"82","severity":1,"message":"83","line":379,"column":154,"nodeType":"84","endLine":379,"endColumn":169},{"ruleId":"85","severity":1,"message":"86","line":419,"column":55,"nodeType":"87","messageId":"88","endLine":419,"endColumn":57},{"ruleId":"85","severity":1,"message":"86","line":252,"column":44,"nodeType":"87","messageId":"88","endLine":252,"endColumn":46},{"ruleId":"89","severity":1,"message":"90","line":106,"column":7,"nodeType":"91","endLine":106,"endColumn":9,"suggestions":"92"},{"ruleId":"76","severity":1,"message":"93","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"80","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":69,"column":9,"nodeType":"96","messageId":"97","endLine":71,"endColumn":12},{"ruleId":"85","severity":1,"message":"86","line":109,"column":61,"nodeType":"87","messageId":"88","endLine":109,"endColumn":63},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'FormControlLabel' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formatDate' and 'purchaseReceiptForm.posting_datetime'. Either include them or remove the dependency array.","ArrayExpression",["100"],"'styles' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [formatDate, purchaseReceiptForm.posting_datetime]",{"range":"103","text":"104"},[3282,3284],"[formatDate, purchaseReceiptForm.posting_datetime]"]